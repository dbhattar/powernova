# Generated by Django 5.0.6 on 2024-11-08 08:50

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=150, unique=True)),
                ('country', models.CharField(choices=[('US', 'United States'), ('CA', 'Canada'), ('GB', 'United Kingdom'), ('AU', 'Australia'), ('DE', 'Germany'), ('FR', 'France'), ('JP', 'Japan'), ('CN', 'China'), ('IN', 'India'), ('BR', 'Brazil'), ('RU', 'Russia'), ('KR', 'South Korea'), ('IT', 'Italy'), ('ES', 'Spain'), ('MX', 'Mexico'), ('NL', 'Netherlands'), ('CH', 'Switzerland'), ('SE', 'Sweden'), ('NO', 'Norway'), ('FI', 'Finland'), ('DK', 'Denmark'), ('BE', 'Belgium'), ('AT', 'Austria'), ('IE', 'Ireland'), ('NZ', 'New Zealand'), ('ZA', 'South Africa'), ('AR', 'Argentina'), ('CL', 'Chile'), ('CO', 'Colombia'), ('PE', 'Peru'), ('PL', 'Poland'), ('PT', 'Portugal'), ('GR', 'Greece'), ('TR', 'Turkey'), ('SA', 'Saudi Arabia'), ('AE', 'United Arab Emirates'), ('IL', 'Israel'), ('SG', 'Singapore'), ('MY', 'Malaysia'), ('TH', 'Thailand'), ('ID', 'Indonesia'), ('PH', 'Philippines'), ('VN', 'Vietnam'), ('PK', 'Pakistan'), ('BD', 'Bangladesh'), ('EG', 'Egypt'), ('NG', 'Nigeria'), ('KE', 'Kenya'), ('GH', 'Ghana'), ('TZ', 'Tanzania'), ('NP', 'Nepal'), ('OO', 'Others')], default='US', max_length=2)),
                ('state', models.CharField(choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('AS', 'American Samoa'), ('DC', 'District of Columbia'), ('FM', 'Federated States of Micronesia'), ('GU', 'Guam'), ('MH', 'Marshall Islands'), ('MP', 'Northern Mariana Islands'), ('PW', 'Palau'), ('PR', 'Puerto Rico'), ('VI', 'Virgin Islands'), ('OO', 'Others')], default='CA', max_length=2)),
            ],
            options={
                'verbose_name_plural': 'Counties',
            },
        ),
        migrations.CreateModel(
            name='Substation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=150)),
                ('voltage', models.FloatField(help_text='Voltage (kV)')),
                ('geo_coordinates', django.contrib.gis.db.models.fields.PointField(blank=True, help_text='Latitude Longitude', null=True, srid=4326)),
                ('study_region', models.CharField(blank=True, max_length=255, null=True)),
                ('utility_area', models.CharField(blank=True, max_length=255, null=True)),
                ('interconnecting_entity', models.CharField(blank=True, max_length=255, null=True)),
                ('county', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='substation.county')),
            ],
            options={
                'verbose_name_plural': 'Substations',
                'unique_together': {('name', 'voltage')},
            },
        ),
        migrations.CreateModel(
            name='SubstationPolicyPortfolio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('policy_portfolio', models.FloatField(blank=True, help_text='Policy Portfolio (MW)', null=True)),
                ('year', models.IntegerField(help_text='Year')),
                ('substation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='substation.substation')),
            ],
            options={
                'verbose_name': 'Policy Portfolio',
                'verbose_name_plural': 'Policy Portfolios',
            },
        ),
        migrations.CreateModel(
            name='SubstationQueue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('queue', models.FloatField(blank=True, help_text='Queue (MW)', null=True)),
                ('no_of_projects', models.IntegerField(blank=True, help_text='Number of Projects', null=True)),
                ('substation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='substation.substation')),
            ],
            options={
                'verbose_name': 'Substation Queue',
                'verbose_name_plural': 'Substation Queues',
            },
        ),
        migrations.CreateModel(
            name='SubstationStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('type', models.CharField(choices=[('heatmap', 'Heatmap'), ('constraint', 'Constraint')], default='heatmap', max_length=50)),
                ('available_capacity', models.FloatField(blank=True, help_text='Available Capacity (MW)', null=True)),
                ('no_of_constraints', models.IntegerField(blank=True, help_text='Number of Constraints', null=True)),
                ('substation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='substation.substation')),
            ],
            options={
                'verbose_name': 'Substation Status',
                'verbose_name_plural': 'Substation Statuses',
            },
        ),
        migrations.AddConstraint(
            model_name='substationpolicyportfolio',
            constraint=models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('substation',), name='unique_active_substation_policy_portfolio'),
        ),
        migrations.AlterUniqueTogether(
            name='substationpolicyportfolio',
            unique_together={('substation', 'year')},
        ),
        migrations.AddConstraint(
            model_name='substationqueue',
            constraint=models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('substation',), name='unique_active_substation_queue'),
        ),
        migrations.AddConstraint(
            model_name='substationstatus',
            constraint=models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('substation', 'type'), name='unique_active_substation_status'),
        ),
    ]
