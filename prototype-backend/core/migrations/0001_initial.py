# Generated by Django 5.0.6 on 2024-11-08 08:04

import core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='FileExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extension', models.CharField(choices=[('pdf', 'PDF'), ('doc', 'DOC'), ('docx', 'DOCX'), ('odt', 'ODT'), ('txt', 'TXT'), ('md', 'MD'), ('csv', 'CSV'), ('xls', 'XLS'), ('xlsx', 'XLSX'), ('ods', 'ODS'), ('ppt', 'PPT'), ('pptx', 'PPTX'), ('html', 'HTML'), ('htm', 'HTM'), ('jpg', 'JPG'), ('jpeg', 'JPEG'), ('png', 'PNG'), ('bmp', 'BMP'), ('svg', 'SVG')], max_length=5, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CgUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, max_length=254, unique=True, verbose_name='email address')),
                ('is_email_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='cguser_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='cguser_permissions_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AppSetting',
            fields=[
                ('id', models.CharField(default='default', max_length=7, primary_key=True, serialize=False)),
                ('image_max_size', models.FloatField(default=2.0, verbose_name='image max size (MB)')),
                ('image_extensions', models.ManyToManyField(to='core.fileextension', verbose_name='allowed image extensions')),
            ],
            options={
                'verbose_name': 'App Setting',
                'verbose_name_plural': 'App Settings',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('avatar', models.ImageField(default='avatars/default.png', upload_to='images/avatars/', validators=[core.validators.validate_image])),
                ('first_name', models.CharField(max_length=150)),
                ('middle_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('U', 'Unknown')], default='U', max_length=17)),
                ('country', models.CharField(choices=[('US', 'United States'), ('CA', 'Canada'), ('GB', 'United Kingdom'), ('AU', 'Australia'), ('DE', 'Germany'), ('FR', 'France'), ('JP', 'Japan'), ('CN', 'China'), ('IN', 'India'), ('BR', 'Brazil'), ('RU', 'Russia'), ('KR', 'South Korea'), ('IT', 'Italy'), ('ES', 'Spain'), ('MX', 'Mexico'), ('NL', 'Netherlands'), ('CH', 'Switzerland'), ('SE', 'Sweden'), ('NO', 'Norway'), ('FI', 'Finland'), ('DK', 'Denmark'), ('BE', 'Belgium'), ('AT', 'Austria'), ('IE', 'Ireland'), ('NZ', 'New Zealand'), ('ZA', 'South Africa'), ('AR', 'Argentina'), ('CL', 'Chile'), ('CO', 'Colombia'), ('PE', 'Peru'), ('PL', 'Poland'), ('PT', 'Portugal'), ('GR', 'Greece'), ('TR', 'Turkey'), ('SA', 'Saudi Arabia'), ('AE', 'United Arab Emirates'), ('IL', 'Israel'), ('SG', 'Singapore'), ('MY', 'Malaysia'), ('TH', 'Thailand'), ('ID', 'Indonesia'), ('PH', 'Philippines'), ('VN', 'Vietnam'), ('PK', 'Pakistan'), ('BD', 'Bangladesh'), ('EG', 'Egypt'), ('NG', 'Nigeria'), ('KE', 'Kenya'), ('GH', 'Ghana'), ('TZ', 'Tanzania'), ('NP', 'Nepal'), ('OO', 'Others')], default='US', max_length=2)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
